/*
 * This code is generated by blanco Framework.
 */
package my.db.exception;

import java.sql.SQLException;

/**
 * データベースの処理件数が1行ではないことを示す例外クラス <br>
 * このクラスはblancoDbが生成したソースコードで利用されます <br>
 * ※このクラスは、ソースコード自動生成後のファイルとして利用されます。
 * @since 2005.05.12
 * @author blanco Framework
 */
public class NotSingleRowException extends SQLException {
    /**
     * このクラスを表現するSQLStateコード。<br>
     * ※このクラスを利用する際には、SQLStateには頼らずに例外クラスの型によって状態を判断するようにしてください。
     */
    protected static final String SQLSTATE_NOTSINGLEROW = "00101";

    /**
     * 処理件数が期待した1行では無いことを示す例外オブジェクト のインスタンスを作成します。
     *
     * @deprecated 理由を格納することができる別のコンストラクタを利用することを薦めます。
     */
    public NotSingleRowException() {
        super("Not single row exception has occured.", SQLSTATE_NOTSINGLEROW);
    }

    /**
     * 処理件数が期待した1行では無いことを示す例外オブジェクト のインスタンスを作成します。
     *
     * @param reason 例外の説明
     */
    public NotSingleRowException(final String reason) {
        super(reason, SQLSTATE_NOTSINGLEROW);
    }

    /**
     * 処理件数が期待した1行では無いことを示す例外オブジェクト のインスタンスを作成します。
     *
     * @param reason 例外の説明
     * @param SQLState 例外を識別する XOPENコードまたは SQL 99のコード
     */
    public NotSingleRowException(final String reason, final String SQLState) {
        super(reason, SQLState);
    }

    /**
     * 処理件数が期待した1行では無いことを示す例外オブジェクト のインスタンスを作成します。
     *
     * @param reason 例外の説明
     * @param SQLState 例外を識別する XOPENコードまたは SQL 99のコード
     * @param vendorCode データベースベンダーが定める固有の例外コード
     */
    public NotSingleRowException(final String reason, final String SQLState, final int vendorCode) {
        super(reason, SQLState, vendorCode);
    }
}
